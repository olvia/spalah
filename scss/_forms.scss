@mixin form-control-focus($color: $input-border-focus) {
  &:focus {
    border-color: $color;
    outline: 0;
  }
}

@mixin placeholder($color: $input-color-placeholder) {
  &:-moz-placeholder {
    color: $color;
    opacity: 1;
  }
  &::-moz-placeholder {
    color: $color;
    opacity: 1;
  }
  &::-webkit-input-placeholder {
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
  &::placeholder {
    color: $color;
  }
  &.placeholder {
    color: $color !important;
  }
  &:focus:-moz-placeholder {
    color: transparent;
  }
  &:focus::-moz-placeholder {
    color: transparent;
  }
  &:focus::-webkit-input-placeholder {
    color: transparent;
  }
  &:focus:-ms-input-placeholder {
    color: transparent;
  }
  &:focus::placeholder {
    color: transparent;
  }
}

@mixin form-inline {
  &__label {
    display: inline-block;
    width: auto;
    vertical-align: middle;
  }
  &__group {
    display: inline-block;
    margin-bottom: 0;
    vertical-align: middle;
  }
}

label {
  // Allow labels can use `margin` for spacing.
  display: inline-block;
  margin-bottom: .5rem;
}

input,
button,
select,
textarea {
  // Remove all `margin`s so our classes don't have to do it themselves.
  margin: 0;
  // Normalize includes `font: inherit;`, so `font-family`. `font-size`, etc are
  // properly inherited. However, `line-height` isn't addressed there. Using this
  // ensures we don't need to unnecessarily redeclare the global font stack.
  line-height: inherit;
}

textarea {
  // Textareas should really only resize vertically so they don't break their (horizontal) containers.
  resize: vertical;
}

fieldset {
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
  // Reset the default outline behavior of fieldsets so they don't affect page layout.
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  // Reset the entire legend element to match the `fieldset`
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  //  border: 0;
}

input[type="search"] {
  // This overrides the extra rounded corners on search inputs in iOS so that our
  // `.form-control` class can properly style them. Note that this cannot simply
  // be added to `.form-control` as it's not specific enough. For details, see
  // https://github.com/twbs/bootstrap/issues/11586.
  -webkit-appearance: none;
}

.form {
  &__group {
    margin-bottom: $form-group-margin-bottom;
    

  }
  &__control {
    display: block;
    width: 100%;
    height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
    padding: $input-padding-vertical $input-padding-horizontal;
    font-size: $input-font-size;
    line-height: $input-line-height;
    color: $input-color;
    background-color: $input-bg;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: $input-border-width solid $input-border;
    border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
    @include placeholder;
    @include form-control-focus;
    &::placeholder {
      color: $input-color-placeholder;
      // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
      opacity: 1;
    }
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
      background-color: $input-bg-disabled;
      opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
    }
    &[disabled],
    fieldset[disabled] & {
      cursor: disabled;
    }
  }
  &__label {
    display: inline-block;
    max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
    margin-bottom: 5px;
    font-weight: bold;
  }
  &_help {
    display: block; // account for any element using help-block
    margin-top: 5px;
    margin-bottom: 10px;
    color: lighten($text-color, 25%); // lighten the text some for contrast
  }
  // &__inline {
  //   @include form-inline;
  // }
}

textarea.form__control {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: none;
 
}



input[type="text"] {
  background-color: #eef1ec;
  .icon{
    display: inline;
  }
}
